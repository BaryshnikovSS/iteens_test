{"version":3,"sources":["redux/languageDescrPage/languageDescrPageActions.js","redux/testPage/testPageActions.js","redux/languageDescrPage/languageDescrPageCurrentQuestionReducer.js","redux/startPageRedux/startPageActions.js","redux/startPageRedux/startPageReducers.js","redux/startPageRedux/startPageSetLanguage.js","redux/rootReducer.js","redux/languageDescrPage/languageDescrPageReducer.js","redux/testPage/testPageReducers.js","redux/store.js","components/Header/resetId.js","redux/header/headerSelector.js","components/Header/Header.js","pages/StartPage/LanguageCard/LanguageCard.js","redux/startPageRedux/startPageSelectors.js","redux/testPage/testPageOperations.js","redux/testPage/testPageSelectors.js","pages/StartPage/StartPage.js","components/TestAnswer/TestAnswer.js","redux/startPageRedux/startPageOperations.js","redux/languageDescrPage/languageDescrPageSelectors.js","pages/LanguageDescrPage/StatisticBlock/TextBlockItem/TextBlockItem.js","pages/LanguageDescrPage/StatisticBlock/StatisticBlock.js","pages/LanguageDescrPage/InformationBlock/InformationBlock.js","pages/LanguageDescrPage/LanguageDescrPage.js","redux/languageDescrPage/languageDescrPageOperations.js","redux/languageDescrPage/languageDescrPageActionCreators.js","components/TestExplanation/TestExplanation.js","components/Shared/BoxShadow/BoxShadow.jsx","components/TestQuestion/TestQuestion.js","components/Shared/Button/Button.jsx","utils/Toggable.jsx","utils/Modal.jsx","components/Modal/EndTest/EndTest.jsx","components/TestControl/TestControl.js","components/NewTestImage/NewTestImage.js","pages/TestPage/TestPage.js","pages/TestPage/TestPageContainer.js","components/ResultDiagram/ResultDiagram.js","redux/allTestContainer/allTestContainerSelectors.js","components/AllTestContainer/AllTestContainer.js","redux/fakeReducer.js","pages/ResultPage/ResultPage.js","components/ContactInfo/ContactInfo.js","components/ContactList/ContactList.js","pages/ContactPage/ContactPage.js","App.js","serviceWorker.js","index.js","components/ResultDiagram/ResultDiagram.module.css","pages/StartPage/StartPage.module.css","pages/StartPage/LanguageCard/LanguageCard.module.css","components/ContactInfo/ContactInfo.module.css","components/ContactList/ContactList.module.css","components/Modal/EndTest/EndTest.module.css","pages/TestPage/TestPage.module.css","components/TestExplanation/TestExplanation.module.css","components/TestControl/TestControl.module.css","components/Header/Header.module.css","pages/LanguageDescrPage/StatisticBlock/StatisticBlock.module.css","pages/LanguageDescrPage/InformationBlock/InformationBlock.module.css","components/TestAnswer/TestAnswer.module.css","pages/ResultPage/ResultPage.module.css","pages/LanguageDescrPage/LanguageDescrPage.module.css","pages/LanguageDescrPage/StatisticBlock/TextBlockItem/TextBlockItem.module.css","components/TestQuestion/TestQuestion.module.css","components/AllTestContainer/AllTestContainer.module.css","assets/img/logo/logo.svg","assets/img/cat/happyCat1.jpg","assets/img/cat/happyCat2.png","assets/img/cat/happyCat3.png","assets/img/cat/pensiveСat1.jpg","assets/img/cat/pensiveCat2.png","components/Shared/BoxShadow/BoxShadow.module.css","components/Shared/Button/Button.module.css","components/NewTestImage/NewTestImage.module.css","assets/img/teamPhoto/photoDivakov.jpg","assets/img/teamPhoto/photoKobec.jpg","assets/img/teamPhoto/photoPotapov.jpg","assets/img/teamPhoto/photoMarukhin.jpg","assets/img/teamPhoto/photoLapeev.jpg","assets/img/teamPhoto/photoVereketa.jpg","assets/img/teamPhoto/photoKalinbet.jpg"],"names":["ActionType","resetUserAnswer","type","payload","reset","fetchResultAnswerSuccess","resultAnswer","fetchFinalResult","finalResult","combineReducers","currentQuestion","state","arguments","length","undefined","_ref","ActionTypeTestPage","test","TestType","loading","error","_ref3","languages","languageReducer","rootReducer","currentLanguageId","startPageSetLanguage","userId","currentQuestionReducer","testTime","startTime","endTime","_ref2","time","Object","objectSpread","languagesInfoArr","startPageReducer","userAnswer","questionNumber","resultAnswered","nextQuestion","_ref4","persistConfig","key","storage","store","createStore","persistReducer","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","resetUserId","id","axios","post","concat","catch","console","log","getUserId","Header","_ref$id","react_default","a","createElement","className","style","nav","react_router_dom","onClick","resetId","to","width","height","logo","src","alt","link","defaultProps","connect","LanguageCard","image","title","countQuestions","languageId","_ref$setLanguageReduc","setLanguageReducer","card","shadow","wrapper","emptyImg","lang","questions","dispatch","getPosts","defaults","baseURL","finishTest","then","getCurrentQuestion","getResultAnswer","StartPage","componentDidMount","_this","props","fetchLang","_callee","regenerator_default","wrap","_context","prev","next","fetchLanguages","res","addNotification","stop","toastManager","add","appearance","autoDismiss","pauseOnHover","_this$props","this","react","components_Header_Header","section","sectionAbout","sectionText","react_media","query","minWidth","matches","blockquote","lduo","autor","organization","href","rel","target","loader","react_loader_spinner_default","color","langList","map","StartPage_LanguageCard_LanguageCard","assign","Component","labelClassNames","disabled","checked","mapDispatchToPropps","asyncToGenerator","mark","response","get","sent","data","abrupt","t0","_x","apply","languageSelectors","withToastManager","getCurrentLanguageId","getLanguageById","getLanguageArr","find","item","TextBlockItem","itemName","info","styles","textBlock_item","textBlock_itemNumber","changeDate","date","Date","parse","toLocaleDateString","StatisticBlock","questionCount","questionPull","createdAt","updatedAt","firstBlock","firstBlockImage","firstBlockTextInfo","StatisticBlock_TextBlockItem_TextBlockItem","btnGoBack","InformationBlock","description","onStart","secondBlock","secondBlockTitle","dangerouslySetInnerHTML","__html","secondBlockDescription","btnStartTest","LanguageDescrPage","handleBtnBack","e","history","preventDefault","push","handleBtnStart","setStartTime","fetchTest","now","_this$props2","languageInfo","_this$props2$language","pullQuestions","Fragment","languageDescrPageContainer","LanguageDescrPage_StatisticBlock_StatisticBlock","LanguageDescrPage_InformationBlock_InformationBlock","languageDescrPageSelectors","languageDescrPageOperations","happyCatArray","happyCat1","happyCat2","happyCat3","pensiveCatArray","pensiveСat1","pensiveСat2","getRandomInt","max","Math","floor","random","cx","classNames","bind","TestAnswer","onClickAnswer","onChangeUserAnswer","onClickSkipQuestion","container","wrapperImgInput","inputWrapper","question","index","currentIndex","answerCorrectly","label","labelCorrect","rightAnswer","labelIncorrect","_id","htmlFor","input","name","data-number","answerNumber","onChange","defaultChecked","answerText","questionText","img","tabletContainerButton","buttonContainer","buttonConfirm","buttonSkip","mobileContainerButton","TestExplanation","onClickNextQuestion","innerContainer","text","button","BoxShadow","children","boxShadow","shadowName","css","TestQuestion","Shared_BoxShadow_BoxShadow","paper","Button","_ref$type","variant","handleClick","rest","objectWithoutProperties","Toggable","isToggle","handleToggle","setState","toggle","React","modalRoot","document","getElementById","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","ReactDOM","createPortal","mapDispatchToProps","handleFinishTest","selectors","endTest","continueTest","modal","controls","Shared_Button_Button","btn","data-redirect","withRouter","current","utils_Toggable","dataset","redirect","headerTest","orderQuestion","utils_Modal","EndTest_EndTest","NewTestImage","desktopImage","mobileImage","media","srcSet","TestPage","userAnswerNumber","languageTitle","scrollTop","window","scrollTo","left","top","behavior","Number","number","_this$props$currentQu","questionAnswer","questionId","onChangeAnswer","_this$props$currentQu2","_this$state","fetchResultAnswer","rewriteCurrentQuestion","resetFields","_this$props$currentQu3","questionSkip","fetchSkipTheQuestion","_this$state2","imageMobile","testPageContainer","components_TestControl_TestControl","allQuestionsCount","components_TestQuestion_TestQuestion","components_NewTestImage_NewTestImage","components_TestAnswer_TestAnswer","answers","components_TestExplanation_TestExplanation","questionExplanation","explanation","bigBackground","background","getState","userID","_response$data","newNextQuestion","result","fetchNextQuestionSuccess","fetchResultAnswerError","TestPageActions","_response$data2","fetchSkipTheQuestionError","TestPageSelectors","ResultDiagramm","percentage","rightAnswered","totalTime","rightAnsweredInPercentage","head","diagramm","react_minimal_pie_chart_dist_default","value","lineWidth","digrammPercentage","round","wishes","statistics","bracket","innerNumber","getQuestions","getLanguageTitle","AllTestContainer","i","userAnswerCorrectly","span","code","allTestContainerSelectors","getAllQuestionsCount","getUserRightAnswered","userRightAnswered","getUserRightAnsweredInPercentage","userRightAnsweredInPercentage","getFinalRsult","ResultPage","setEndTime","delta","moment","format","_this$props3","ResultDiagram","getMinutes","components_AllTestContainer_AllTestContainer","relative","react_router","selector","ContactInfo","email","textEmailFirst","textEmail","project","textProject","PHOTOS","photoDivakov","photoKobec","photoPotapov","photoMarukhin","photoLapeev","photoVereketa","photoKalinbet","ContactList","contacts","list","contact","photo","position","ContactPage","components_ContactInfo_ContactInfo","components_ContactList_ContactList","App","dist","placement","exact","path","component","Boolean","location","hostname","match","render","es","integration_react","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p","shadowDepth1","shadowDepth2","shadowDepth3","shadowDepth4","shadowDepth5","shadowDepth6","shadowDepth7","shadowDepth8","shadowDepth9","shadowDepth10","shadowDepth11","shadowDepth12","shadowDepth13","shadowDepth14","shadowDepth15","shadowDepth16","shadowDepth17","shadowDepth18","shadowDepth19","shadowDepth20","shadowDepth21","shadowDepth22","shadowDepth23","shadowDepth24","simple","contained","outlined"],"mappings":"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","file":"static/js/main.0ffc476a.chunk.js","sourcesContent":["export const ActionType = {\n  FETCH_TEST_START: 'FETCH_TEST_START',\n  FETCH_TEST_SUCCESS: 'FETCH_TEST_SUCCESS',\n  FETCH_TEST_ERROR: 'FETCH_TEST_ERROR',\n  TIME_START: 'TIME_START',\n  TIME_END: 'TIME_END',\n};\nexport const llll = () => null;\n","export const ActionType = {\n  REWRITE_CURRENTQUESTION: 'REWRITE_CURRENTQUESTION',\n  CHANGE_USER_ANSWER: 'CHANGE_USER_ANSWER',\n  CHANGE_USER_ANSWER_QUESTION_NUMBER: 'CHANGE_USER_ANSWER_QUESTION_NUMBER',\n  RESET_USER_ANSWER: 'RESET_USER_ANSWER',\n  FETCH_RESULT_ANSWER_START: 'FETCH_RESULT_ANSWER_START',\n  FETCH_RESULT_ANSWER_SUCCESS: 'FETCH_RESULT_ANSWER_SUCCESS',\n  FETCH_RESULT_ANSWER_ERROR: 'FETCH_RESULT_ANSWER_ERROR',\n  RESET_RESULT_ANSWER: 'RESET_RESULT_ANSWER',\n  FETCH_NEXT_QUESTION_SUCCESS: 'FETCH_NEXT_QUESTION_SUCCESS',\n  RESET_NEXT_QUESTION: 'RESET_NEXT_QUESTION',\n  FETCH_SKIP_QUESTION_START: 'FETCH_SKIP_QUESTION_START',\n  FETCH_SKIP_QUESTION_SUCCESS: 'FETCH_SKIP_QUESTION_SUCCESS',\n  FETCH_SKIP_QUESTION_ERROR: 'FETCH_SKIP_ERROR',\n  FETCH_FINAL_RESULT: 'FETCH_FINAL_RESULT',\n  FINISH_TEST_START: 'FINISH_TEST_START',\n  FINISH_TEST_SUCCESS: 'FINISH_TEST_SUCCESS',\n  FINISH_TEST_ERROR: 'FINISH_TEST_ERROR',\n};\n\n/*\n * finishTest\n */\nexport const finishTestStart = () => ({\n  type: ActionType.FINISH_TEST_START,\n});\nexport const finishTestSuccess = () => ({\n  type: ActionType.FINISH_TEST_SUCCESS,\n});\nexport const finishTestError = () => ({\n  type: ActionType.FINISH_TEST_ERROR,\n});\n\n/* rewriteCurrentQuestion */\n\nexport const rewriteCurrentQuestion = test => ({\n  type: ActionType.REWRITE_CURRENTQUESTION,\n  payload: {\n    test,\n  },\n});\n\n/* userAnswer */\n\nexport const changeUserAnswer = userAnswer => ({\n  type: ActionType.CHANGE_USER_ANSWER,\n  payload: {\n    userAnswer,\n  },\n});\n\nexport const resetUserAnswer = () => ({\n  type: ActionType.RESET_USER_ANSWER,\n  payload: {\n    reset: null,\n  },\n});\n\nexport const changeUserAnswerQuestionNumber = questionNumber => ({\n  type: ActionType.CHANGE_USER_ANSWER_QUESTION_NUMBER,\n  payload: {\n    questionNumber,\n  },\n});\n\n/* resultAnswer */\n\nexport const fetchResultAnswerStart = () => ({\n  type: ActionType.FETCH_RESULT_ANSWER_START,\n});\n\nexport const fetchResultAnswerSuccess = resultAnswer => ({\n  type: ActionType.FETCH_RESULT_ANSWER_SUCCESS,\n  payload: {\n    resultAnswer,\n  },\n});\n\nexport const fetchResultAnswerError = error => ({\n  type: ActionType.FETCH_RESULT_ANSWER_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const resetResultAnswer = () => ({\n  type: ActionType.RESET_RESULT_ANSWER,\n  payload: {\n    reset: false,\n  },\n});\n\n/* nextQuestion */\n\nexport const fetchNextQuestionSuccess = nextQuestion => ({\n  type: ActionType.FETCH_NEXT_QUESTION_SUCCESS,\n  payload: {\n    nextQuestion,\n  },\n});\n\nexport const resetNextQuestion = () => ({\n  type: ActionType.RESET_NEXT_QUESTION,\n  payload: {\n    reset: null,\n  },\n});\n\n/* Action skip the question */\n\nexport const fetchSkipTheQuestionStart = () => ({\n  type: ActionType.FETCH_SKIP_QUESTION_START,\n});\n\nexport const fetchSkipTheQuestionSuccess = test => ({\n  type: ActionType.FETCH_SKIP_QUESTION_SUCCESS,\n  payload: {\n    test,\n  },\n});\n\nexport const fetchSkipTheQuestionError = error => ({\n  type: ActionType.FETCH_SKIP_QUESTION_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchFinalResult = finalResult => ({\n  type: ActionType.FETCH_FINAL_RESULT,\n  payload: {\n    finalResult,\n  },\n});\n","import { combineReducers } from 'redux';\nimport { ActionType } from './languageDescrPageActions';\nimport {\n  ActionType as ActionTypeTestPage,\n  ActionType as TestType,\n} from '../testPage/testPageActions';\n\nconst currentQuestionReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_SUCCESS:\n      return payload.test;\n    case ActionTypeTestPage.REWRITE_CURRENTQUESTION:\n      return payload.test;\n    case ActionTypeTestPage.FETCH_SKIP_QUESTION_SUCCESS:\n      return payload.test;\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_START:\n      return true;\n\n    case ActionType.FETCH_TEST_SUCCESS:\n    case ActionType.FETCH_TEST_ERROR:\n    case TestType.FINISH_TEST_SUCCESS:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_START:\n    case ActionType.FETCH_TEST_SUCCESS:\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n\n    case ActionType.FETCH_TEST_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  currentQuestion: currentQuestionReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","export const ActionType = {\n  FETCH_LANGUAGES_START: 'FETCH_LANGUAGES_START',\n  FETCH_LANGUAGES_SUCCESS: 'FETCH_LANGUAGES_SUCCESS',\n  FETCH_LANGUAGES_ERROR: 'FETCH_LANGUAGES_ERROR',\n  SET_LANGUAGE: 'SET_LANGUAGE',\n  COME_BACK_TO_STARTPAGE: 'COME_BACK_TO_STARTPAGE',\n};\n\nexport const fetchLanguageStart = () => ({\n  type: ActionType.FETCH_LANGUAGES_START,\n});\n\nexport const fetchLanguageSuccess = languages => ({\n  type: ActionType.FETCH_LANGUAGES_SUCCESS,\n  payload: languages,\n});\n\nexport const fetchLanguageError = error => ({\n  type: ActionType.FETCH_LANGUAGES_ERROR,\n  payload: error,\n});\n\nexport const setLanguage = id => ({\n  type: ActionType.SET_LANGUAGE,\n  payload: id,\n});\nexport const onComeBack = currentLanguageId => ({\n  type: ActionType.COME_BACK_TO_STARTPAGE,\n  payload: {\n    currentLanguageId,\n  },\n});\n","import { combineReducers } from 'redux';\nimport { ActionType } from './startPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nconst languageReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n      return payload;\n    case TestType.FINISH_TEST_SUCCESS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_START:\n      return true;\n\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n    case ActionType.FETCH_LANGUAGES_ERROR:\n      return false;\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_START:\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n      return null;\n\n    case ActionType.FETCH_LANGUAGES_ERROR:\n      return payload;\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  languages: languageReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","import { ActionType } from './startPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nconst languageReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.SET_LANGUAGE:\n      return payload;\n    case ActionType.COME_BACK_TO_STARTPAGE:\n      return '';\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default languageReducer;\n","import { combineReducers } from 'redux';\nimport {\n  userIdReducer,\n  timeStartReducer,\n} from './languageDescrPage/languageDescrPageReducer';\nimport currentQuestionReducer from './languageDescrPage/languageDescrPageCurrentQuestionReducer';\nimport startPageReducer from './startPageRedux/startPageReducers';\nimport startPageSetLanguage from './startPageRedux/startPageSetLanguage';\nimport {\n  userAnswerReducer,\n  resultAnsweredReducer,\n  nextQuestionAnswerReducer,\n  finalResultReducer,\n} from './testPage/testPageReducers';\n\n// тут импортируем редюсеры\n\nconst rootReducer = combineReducers({\n  currentLanguageId: startPageSetLanguage,\n  userId: userIdReducer,\n  currentQuestion: currentQuestionReducer,\n  testTime: timeStartReducer,\n  languagesInfoArr: startPageReducer,\n  userAnswer: userAnswerReducer,\n  resultAnswered: resultAnsweredReducer,\n  nextQuestion: nextQuestionAnswerReducer,\n  finalResult: finalResultReducer,\n});\n\nexport default rootReducer;\n","import { ActionType } from './languageDescrPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nexport const userIdReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_SUCCESS:\n      return payload.test.userId;\n    case TestType.FINISH_TEST_SUCCESS:\n      return '';\n    default:\n      return state;\n  }\n};\nexport const timeStartReducer = (\n  state = {\n    startTime: null,\n    endTime: null,\n  },\n  { type, payload },\n) => {\n  switch (type) {\n    case ActionType.TIME_START:\n      return {\n        startTime: payload.time,\n      };\n    case ActionType.TIME_END:\n      return { ...state, endTime: payload.time };\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return {\n        startTime: null,\n        endTime: null,\n      };\n    default:\n      return state;\n  }\n};\n","// import { combineReducers } from 'redux';\nimport { ActionType } from './testPageActions';\n\n// export const loadingReducer = (state = false, { type }) => {\n//   switch (type) {\n//     case ActionType.FETCH_CURRENTQUESTION_START:\n//     case ActionType.PUSH_USER_ANSWER_START:\n//       return true;\n//     case ActionType.FETCH_CURRENTQUESTION_SUCCESS:\n//     case ActionType.PUSH_USER_ANSWER_SUCCESS:\n//       return false;\n//     default:\n//       return state;\n//   }\n// };\n\n// export const errorReducer = (state = null, { type, payload }) => {\n//   switch (type) {\n//     case ActionType.FETCH_CURRENTQUESTION_ERROR:\n//     case ActionType.PUSH_USER_ANSWER_ERROR:\n//       return payload.error;\n//     case ActionType.FETCH_CURRENTQUESTION_START:\n//     case ActionType.PUSH_USER_ANSWER_START:\n//       return null;\n//     default:\n//       return state;\n//   }\n// };\n\nexport const userAnswerReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ActionType.CHANGE_USER_ANSWER:\n      return payload.userAnswer;\n    case ActionType.CHANGE_USER_ANSWER_QUESTION_NUMBER:\n      return payload.questionNumber;\n    case ActionType.RESET_USER_ANSWER:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const resultAnsweredReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_RESULT_ANSWER_SUCCESS:\n      return payload.resultAnswer;\n    case ActionType.RESET_RESULT_ANSWER:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport const nextQuestionAnswerReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_NEXT_QUESTION_SUCCESS:\n      return payload.nextQuestion;\n    case ActionType.RESET_NEXT_QUESTION:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const finalResultReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_FINAL_RESULT:\n      return payload.finalResult;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'test',\n  storage,\n};\n\nexport const store = createStore(\n  persistReducer(persistConfig, rootReducer),\n  composeWithDevTools(applyMiddleware(thunk)),\n);\nexport const persistor = persistStore(store);\n","import axios from 'axios';\n\nconst resetUserId = id =>\n  axios\n    .post(`https://test.goit.co.ua/api/tests/cancel/${id}`)\n    // eslint-disable-next-line\n    .catch(error => console.log(error));\n\nexport default resetUserId;\n","const getUserId = state => state.userId;\n\nexport default getUserId;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport logo from '../../assets/img/logo/logo.svg';\nimport style from './Header.module.css';\nimport resetId from './resetId';\nimport getUserId from '../../redux/header/headerSelector';\n\nconst Header = ({ id = '' }) => (\n  <nav className={style.nav}>\n    <Link\n      onClick={() => {\n        if (id) resetId(id);\n      }}\n      className={style.a}\n      to=\"/\"\n    >\n      <img\n        width=\"88\"\n        height=\"18\"\n        className={style.logo}\n        src={logo}\n        alt=\"logo\"\n      />\n    </Link>\n    <Link className={style.link} to=\"/contacts\">\n      контакты\n    </Link>\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  id: getUserId(state),\n});\n\nHeader.defaultProps = {\n  id: '',\n};\n\nHeader.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './LanguageCard.module.css';\nimport { setLanguage } from '../../../redux/startPageRedux/startPageActions';\n\nconst LanguageCard = ({\n  image,\n  title,\n  countQuestions,\n  languageId,\n  setLanguageReducer = () => null,\n}) => (\n  <li className={style.card}>\n    <Link\n      className={style.link}\n      onClick={() => setLanguageReducer(languageId)}\n      to=\"/language_descr\"\n    />\n    <div className={style.shadow} />\n    <div className={style.wrapper}>\n      {image.length ? (\n        <img\n          height=\"85\"\n          width=\"auto\"\n          className={style.logo}\n          src={image}\n          alt=\"logoLang\"\n        />\n      ) : (\n        <div className={style.emptyImg} />\n      )}\n\n      <p className={style.lang}>{title}</p>\n      <p className={style.questions}>{countQuestions} вопросов</p>\n    </div>\n  </li>\n);\n\nLanguageCard.defaultProps = {\n  image: '',\n};\n\nLanguageCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  countQuestions: PropTypes.number.isRequired,\n  languageId: PropTypes.string.isRequired,\n  setLanguageReducer: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToPropps = dispatch => ({\n  setLanguageReducer: languageId => dispatch(setLanguage(languageId)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToPropps,\n)(LanguageCard);\n","export const getPosts = state => state.languagesInfoArr.languages;\n\nexport const loading = state => state.languagesInfoArr.loading;\n\nexport const error = state => state.languagesInfoArr.error;\n","/* eslint-disable */\nimport axios from 'axios';\nimport {\n  fetchResultAnswerStart,\n  fetchResultAnswerSuccess,\n  fetchResultAnswerError,\n  fetchNextQuestionSuccess,\n  fetchSkipTheQuestionError,\n  fetchSkipTheQuestionStart,\n  fetchSkipTheQuestionSuccess,\n  fetchFinalResult,\n  finishTestError,\n  finishTestStart,\n  finishTestSuccess,\n} from './testPageActions';\n\naxios.defaults.baseURL = 'https://test.goit.co.ua/api';\nexport const finishTest = userId => dispatch => {\n  dispatch(finishTestStart());\n  axios\n    .post(`/tests/cancel/${userId}`)\n    .then(() => {\n      dispatch(finishTestSuccess());\n    })\n    .catch(error => {\n      dispatch(finishTestError(error));\n    });\n};\nexport const fetchResultAnswer = (userID, userAnswer) => dispatch => {\n  dispatch(fetchResultAnswerStart());\n\n  axios\n    .post(`/answer/${userID}`, userAnswer)\n    .then(response => {\n      if (!response.data.finalResult) {\n        const {\n          userId,\n          languageTitle,\n          questionNumber,\n          allQuestionsCount,\n          nextQuestion,\n        } = response.data;\n\n        const newNextQuestion = {\n          userId,\n          languageTitle,\n          questionNumber,\n          allQuestionsCount,\n          question: nextQuestion,\n        };\n        dispatch(fetchResultAnswerSuccess(response.data.result));\n        dispatch(fetchNextQuestionSuccess(newNextQuestion));\n        return;\n      }\n      dispatch(fetchResultAnswerSuccess(response.data.result));\n      dispatch(fetchFinalResult(response.data));\n    })\n    .catch(error => dispatch(fetchResultAnswerError(error)));\n};\n\nexport const fetchSkipTheQuestion = (userID, question) => dispatch => {\n  dispatch(fetchSkipTheQuestionStart());\n\n  axios\n    .post(`/answer/skip/${userID}`, question)\n    .then(response => {\n      if (!response.data.finalResult) {\n        const { questionNumber, allQuestionsCount } = response.data;\n        const question = response.data.question || response.data.nextQuestion;\n        const newNextQuestion = {\n          questionNumber,\n          allQuestionsCount,\n          question,\n        };\n\n        return dispatch(fetchSkipTheQuestionSuccess(newNextQuestion));\n      }\n\n      dispatch(fetchFinalResult(response.data));\n    })\n    .catch(error => dispatch(fetchSkipTheQuestionError(error)));\n};\n","export const getCurrentQuestion = state =>\n  state.currentQuestion.currentQuestion;\n\nexport const getResultAnswer = state => state.resultAnswered;\n\nexport const getUserId = state => state.userId;\n\nexport const finalResult = state => state.finalResult;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Media from 'react-media';\nimport Loader from 'react-loader-spinner';\nimport { withToastManager } from 'react-toast-notifications';\nimport Nav from '../../components/Header/Header';\nimport style from './StartPage.module.css';\nimport CardLanguage from './LanguageCard/LanguageCard';\nimport * as startPageOperations from '../../redux/startPageRedux/startPageOperations';\nimport * as languageSelectors from '../../redux/startPageRedux/startPageSelectors';\nimport { finishTest } from '../../redux/testPage/testPageOperations';\nimport { getUserId } from '../../redux/testPage/testPageSelectors';\n\nclass StartPage extends Component {\n  componentDidMount = () => {\n    if (this.props.userId) this.props.finishTest(this.props.userId);\n    this.fetchLang();\n  };\n\n  fetchLang = async () => {\n    const lang = this.props.fetchLanguages();\n    lang.then(res => {\n      if (res) {\n        this.addNotification('Что-то пошло не так, перезагрузи страницу');\n      }\n    });\n  };\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'error',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  render() {\n    const { loading, languages } = this.props;\n    return (\n      <Fragment>\n        <Nav />\n        <section className={style.section}>\n          <div className={style.sectionAbout}>\n            <div className={style.sectionText}>\n              <Media query={{ minWidth: 768 }}>\n                {matches =>\n                  matches && (\n                    <Fragment>\n                      <blockquote className={style.blockquote}>\n                        <span className={style.lduo}>&ldquo;</span>\n                        <br />Я не провалил тест, я просто нашел 100 способов\n                        сделать его неправильно\n                      </blockquote>\n                      <p className={style.autor}>Бенджамин Франклин</p>\n                    </Fragment>\n                  )\n                }\n              </Media>\n              <p className={style.organization}>\n                [ Онлайн тесты для студентов{' '}\n                <a\n                  href=\"https://goiteens.ua/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  GoITeens\n                </a>{' '}\n                ]\n              </p>\n            </div>\n          </div>\n          {loading && (\n            <div className={style.loader}>\n              <Loader type=\"Circles\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n            </div>\n          )}\n          {languages.length > 0 && (\n            <ul className={style.langList}>\n              {languages.map(lang => (\n                <CardLanguage key={lang.languageId} {...lang} />\n              ))}\n            </ul>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nStartPage.defaultProps = {\n  error: null,\n  userId: null,\n};\n\nStartPage.propTypes = {\n  fetchLanguages: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  // eslint-disable-next-line\n  languages: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  userId: PropTypes.string,\n  finishTest: PropTypes.func.isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  languages: languageSelectors.getPosts(state),\n  loading: languageSelectors.loading(state),\n  error: languageSelectors.error(state),\n  userId: getUserId(state),\n});\n\nconst mapDispatchToPropps = {\n  fetchLanguages: startPageOperations.fetchLanguages,\n  finishTest,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToPropps,\n)(withToastManager(StartPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './TestAnswer.module.css';\nimport happyCat1 from '../../assets/img/cat/happyCat1.jpg';\nimport happyCat2 from '../../assets/img/cat/happyCat2.png';\nimport happyCat3 from '../../assets/img/cat/happyCat3.png';\nimport pensiveСat1 from '../../assets/img/cat/pensiveСat1.jpg';\nimport pensiveСat2 from '../../assets/img/cat/pensiveCat2.png';\n\nconst happyCatArray = [happyCat1, happyCat2, happyCat3];\nconst pensiveCatArray = [pensiveСat1, pensiveСat2];\n\nconst getRandomInt = max => Math.floor(Math.random() * max);\n\nconst cx = classNames.bind(styles);\nlet labelClassNames;\nlet disabled;\nlet checked;\n\nconst TestAnswer = ({\n  questions,\n  resultAnswer,\n  onClickAnswer,\n  onChangeUserAnswer,\n  onClickSkipQuestion,\n}) => (\n  <>\n    <div className={styles.container}>\n      <div className={styles.wrapperImgInput}>\n        <div className={styles.inputWrapper}>\n          {questions.map((question, index) => {\n            if (resultAnswer) {\n              const currentIndex = index + 1;\n              labelClassNames = resultAnswer.answerCorrectly\n                ? cx({\n                    label: true,\n                    labelCorrect: currentIndex === resultAnswer.rightAnswer,\n                  })\n                : cx({\n                    label: true,\n                    labelIncorrect: currentIndex === resultAnswer.userAnswer,\n                    labelCorrect: currentIndex === resultAnswer.rightAnswer,\n                  });\n              checked = currentIndex === resultAnswer.userAnswer;\n              disabled = true;\n            } else {\n              labelClassNames = cx({\n                label: true,\n              });\n              disabled = false;\n              checked = false;\n            }\n\n            return (\n              <label\n                key={question._id}\n                htmlFor={question._id}\n                className={labelClassNames}\n              >\n                {resultAnswer ? (\n                  <input\n                    disabled={disabled}\n                    id={question._id}\n                    className={styles.input}\n                    name=\"answer\"\n                    type=\"radio\"\n                    data-number={question.answerNumber}\n                    onChange={onChangeUserAnswer}\n                    defaultChecked={checked}\n                  />\n                ) : (\n                  <input\n                    disabled={disabled}\n                    id={question._id}\n                    className={styles.input}\n                    name=\"answer\"\n                    type=\"radio\"\n                    data-number={question.answerNumber}\n                    onChange={onChangeUserAnswer}\n                  />\n                )}\n\n                <span\n                  dangerouslySetInnerHTML={{ __html: question.answerText }}\n                  className={styles.questionText}\n                />\n              </label>\n            );\n          })}\n        </div>\n        {resultAnswer &&\n          (resultAnswer.answerCorrectly ? (\n            <img\n              className={styles.img}\n              alt=\"cat\"\n              src={happyCatArray[getRandomInt(3)]}\n            />\n          ) : (\n            <img\n              className={styles.img}\n              alt=\"cat\"\n              src={pensiveCatArray[getRandomInt(2)]}\n            />\n          ))}\n      </div>\n\n      {!resultAnswer && (\n        <div className={styles.tabletContainerButton}>\n          <div className={styles.buttonContainer}>\n            <button\n              onClick={onClickAnswer}\n              type=\"submit\"\n              className={styles.buttonConfirm}\n            >\n              Ответить\n            </button>\n            <button\n              onClick={onClickSkipQuestion}\n              type=\"submit\"\n              className={styles.buttonSkip}\n            >\n              Пропустить\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n    {!resultAnswer && (\n      <div className={styles.mobileContainerButton}>\n        <div className={styles.buttonContainer}>\n          <button\n            onClick={onClickAnswer}\n            type=\"submit\"\n            className={styles.buttonConfirm}\n          >\n            Ответить\n          </button>\n          <button\n            onClick={onClickSkipQuestion}\n            type=\"submit\"\n            className={styles.buttonSkip}\n          >\n            Пропустить\n          </button>\n        </div>\n      </div>\n    )}\n  </>\n);\n\nTestAnswer.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  resultAnswer: PropTypes.oneOfType([\n    PropTypes.shape({\n      rightAnswer: PropTypes.number,\n      userAnswer: PropTypes.number,\n      userAnswerCorrectly: PropTypes.bool,\n      questionExplanation: PropTypes.string,\n    }),\n    PropTypes.bool,\n  ]).isRequired,\n  onClickAnswer: PropTypes.func,\n  onChangeUserAnswer: PropTypes.func,\n  onClickSkipQuestion: PropTypes.func,\n};\n\nTestAnswer.defaultProps = {\n  onClickAnswer: () => null,\n  onChangeUserAnswer: () => null,\n  onClickSkipQuestion: () => null,\n};\n\nexport default TestAnswer;\n","import axios from 'axios';\nimport {\n  fetchLanguageStart,\n  fetchLanguageSuccess,\n  fetchLanguageError,\n} from './startPageActions';\n\n// eslint-disable-next-line\nexport const fetchLanguages = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetchLanguageStart());\n      const response = await axios.get('https://test.goit.co.ua/api/tests');\n      dispatch(fetchLanguageSuccess(response.data.languages));\n      return null;\n    } catch (error) {\n      dispatch(fetchLanguageError(error));\n      return error;\n    }\n  };\n};\n","export const getCurrentLanguageId = state => state.currentLanguageId;\nexport const getLanguageArr = state => state.languagesInfoArr.languages;\n\nexport const getLanguageById = state => {\n  const id = getCurrentLanguageId(state);\n  const languages = getLanguageArr(state);\n  return languages.find(item => item.languageId === id);\n};\nexport const loading = state => state.currentQuestion.loading;\n\nexport const error = state => state.currentQuestion.error;\n\nexport const startTime = state => state.testTime.startTime;\nexport const endTime = state => state.testTime.endTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextBlockItem.module.css';\n\nconst TextBlockItem = ({ itemName, info }) => (\n  <div className={styles.textBlock_item}>\n    <p>{itemName}</p>\n    <span />\n    <p className={styles.textBlock_itemNumber}>{info}</p>\n  </div>\n);\nTextBlockItem.propTypes = {\n  itemName: PropTypes.string.isRequired,\n  info: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\nexport default TextBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StatisticBlock.module.css';\nimport TextBlockItem from './TextBlockItem/TextBlockItem';\n\nconst changeDate = date => {\n  const infoDate = new Date(Date.parse(date));\n  return infoDate.toLocaleDateString();\n};\nconst StatisticBlock = ({\n  logo,\n  questionCount,\n  questionPull,\n  createdAt,\n  updatedAt,\n  onClick,\n}) => (\n  <div className={styles.firstBlock}>\n    <img className={styles.firstBlockImage} src={logo} alt=\"languageLogo\" />\n    <div className={styles.firstBlockTextInfo}>\n      <TextBlockItem itemName=\"Количество вопросов\" info={questionCount} />\n      <TextBlockItem itemName=\"Пул вопросов\" info={questionPull} />\n      <TextBlockItem itemName=\"Создан\" info={changeDate(createdAt)} />\n      <TextBlockItem itemName=\"Обновлен\" info={changeDate(updatedAt)} />\n      <button className={styles.btnGoBack} type=\"button\" onClick={onClick}>\n        Вернуться к списку тестов\n      </button>\n    </div>\n  </div>\n);\n\nStatisticBlock.propTypes = {\n  logo: PropTypes.string.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionPull: PropTypes.number.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatisticBlock;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Media from 'react-media';\nimport styles from './InformationBlock.module.css';\n\nconst InformationBlock = ({ title, description, onStart }) => (\n  <div className={styles.secondBlock}>\n    <Media query=\"(min-width: 768px)\">\n      {matches =>\n        matches && (\n          <Fragment>\n            <h2 className={styles.secondBlockTitle}>{title}</h2>\n            <p\n              dangerouslySetInnerHTML={{ __html: description }}\n              className={styles.secondBlockDescription}\n            />\n          </Fragment>\n        )\n      }\n    </Media>\n    <button className={styles.btnStartTest} type=\"button\" onClick={onStart}>\n      Начать тест\n    </button>\n  </div>\n);\nInformationBlock.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  onStart: PropTypes.func.isRequired,\n};\nexport default InformationBlock;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withToastManager } from 'react-toast-notifications';\nimport Loader from 'react-loader-spinner';\nimport * as languageDescrPageSelectors from '../../redux/languageDescrPage/languageDescrPageSelectors';\nimport * as languageDescrPageActionCreators from '../../redux/languageDescrPage/languageDescrPageActionCreators';\nimport * as languageDescrPageOperations from '../../redux/languageDescrPage/languageDescrPageOperations';\nimport styles from './LanguageDescrPage.module.css';\nimport StatisticBlock from './StatisticBlock/StatisticBlock';\nimport InformationBlock from './InformationBlock/InformationBlock';\nimport Header from '../../components/Header/Header';\nimport '../../fonts.css';\n\nclass LanguageDescrPage extends Component {\n  state = {};\n\n  handleBtnBack = e => {\n    const { history } = this.props;\n    e.preventDefault();\n    history.push('/');\n  };\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'error',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  handleBtnStart = async e => {\n    const { setStartTime, fetchTest, currentLanguageId, history } = this.props;\n    e.preventDefault();\n    const tests = await fetchTest(currentLanguageId);\n    if (tests) {\n      this.addNotification('Что-то пошло не так, перезагрузи страницу');\n    } else {\n      setStartTime(Date.now());\n      history.push('/test');\n    }\n  };\n\n  render() {\n    const {\n      languageInfo,\n      languageInfo: {\n        title,\n        description,\n        image,\n        pullQuestions,\n        countQuestions,\n        createdAt,\n        updatedAt,\n      },\n      loading,\n    } = this.props;\n    return (\n      <>\n        <Header />\n        {!languageInfo ||\n          (loading && (\n            <div className={styles.loader}>\n              <Loader type=\"Circles\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n            </div>\n          ))}\n        {languageInfo &&\n          (!loading && (\n            <section className={styles.languageDescrPageContainer}>\n              <StatisticBlock\n                logo={image}\n                questionCount={countQuestions}\n                questionPull={pullQuestions}\n                createdAt={createdAt}\n                updatedAt={updatedAt}\n                onClick={this.handleBtnBack}\n              />\n              <InformationBlock\n                title={title}\n                description={description}\n                onStart={this.handleBtnStart}\n              />\n            </section>\n          ))}\n      </>\n    );\n  }\n}\n\nLanguageDescrPage.propTypes = {\n  languageInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    countQuestions: PropTypes.number.isRequired,\n    pullQuestions: PropTypes.number.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string,\n  }).isRequired,\n  fetchTest: PropTypes.func.isRequired,\n  setStartTime: PropTypes.func.isRequired,\n  currentLanguageId: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n  history: PropTypes.shape().isRequired,\n};\nconst mapStateToProps = state => ({\n  languageInfo: languageDescrPageSelectors.getLanguageById(state),\n  currentLanguageId: languageDescrPageSelectors.getCurrentLanguageId(state),\n  loading: languageDescrPageSelectors.loading(state),\n  error: languageDescrPageSelectors.error(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTest: id => dispatch(languageDescrPageOperations.fetchTest(id)),\n  setStartTime: startTime =>\n    dispatch(languageDescrPageActionCreators.startTime(startTime)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToastManager(LanguageDescrPage));\n","import axios from 'axios';\n\nimport {\n  fetchTestStart,\n  fetchTestSuccess,\n  fetchTestError,\n} from './languageDescrPageActionCreators';\n\nexport const fetchTest = id => {\n  return async dispatch => {\n    try {\n      dispatch(fetchTestStart());\n      const response = await axios.get(\n        `https://test.goit.co.ua/api/tests/${id}`,\n      );\n      dispatch(fetchTestSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchTestError(error));\n      return error;\n    }\n    return '';\n  };\n};\nexport const llll = () => null;\n","import { ActionType } from './languageDescrPageActions';\n\nexport const fetchTestStart = () => ({\n  type: ActionType.FETCH_TEST_START,\n});\n\nexport const fetchTestSuccess = test => ({\n  type: ActionType.FETCH_TEST_SUCCESS,\n  payload: {\n    test,\n  },\n});\n\nexport const fetchTestError = error => ({\n  type: ActionType.FETCH_TEST_ERROR,\n  payload: {\n    error,\n  },\n});\nexport const startTime = () => ({\n  type: ActionType.TIME_START,\n  payload: {\n    time: Date.now(),\n  },\n});\nexport const endTime = () => ({\n  type: ActionType.TIME_END,\n  payload: {\n    time: Date.now(),\n  },\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TestExplanation.module.css';\n\nconst TestExplanation = ({ description, onClickNextQuestion }) => (\n  <div className={styles.container}>\n    <div className={styles.innerContainer}>\n      {description && (\n        <Fragment>\n          <p className={styles.title}>Пояснения:</p>\n\n          <p\n            className={styles.text}\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </Fragment>\n      )}\n      {onClickNextQuestion && (\n        <button\n          onClick={onClickNextQuestion}\n          className={styles.button}\n          type=\"submit\"\n        >\n          Ок, дальше\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nTestExplanation.propTypes = {\n  description: PropTypes.string,\n  onClickNextQuestion: PropTypes.func,\n};\nTestExplanation.defaultProps = {\n  onClickNextQuestion: () => null,\n  description: null,\n};\n\nexport default TestExplanation;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './BoxShadow.module.css';\r\n\r\nconst BoxShadow = ({ children, className, boxShadow }) => {\r\n  const shadowName = `shadowDepth${boxShadow}`;\r\n  return <div className={`${className} ${css[shadowName]}`}>{children}</div>;\r\n};\r\nBoxShadow.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.object,\r\n    PropTypes.arrayOf(PropTypes.object),\r\n  ]).isRequired,\r\n  boxShadow: PropTypes.number,\r\n  className: PropTypes.string,\r\n};\r\nBoxShadow.defaultProps = {\r\n  boxShadow: 1,\r\n  className: '',\r\n};\r\n\r\nexport default BoxShadow;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxShadow from '../Shared/BoxShadow/BoxShadow';\nimport css from './TestQuestion.module.css';\n\nconst TestQuestion = ({ question }) => {\n  return (\n    <BoxShadow boxShadow={14} className={css.paper}>\n      <p className={css.text} dangerouslySetInnerHTML={{ __html: question }} />\n    </BoxShadow>\n  );\n};\nTestQuestion.propTypes = {\n  question: PropTypes.string,\n};\nTestQuestion.defaultProps = {\n  question: '',\n};\nexport default TestQuestion;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Button.module.css';\r\n\r\nconst Button = ({\r\n  type = 'button',\r\n  children,\r\n  className,\r\n  variant,\r\n  handleClick,\r\n  ...rest\r\n}) => {\r\n  const style = css[variant];\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={`${style} ${className}`}\r\n      onClick={handleClick}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  children: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  variant: PropTypes.oneOf(['contained', 'outlined', 'simple']),\r\n  handleClick: PropTypes.func,\r\n};\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  className: '',\r\n  variant: 'simple',\r\n  handleClick: () => null,\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// render-props, переключатель\r\nclass Toggable extends React.Component {\r\n  state = {\r\n    isToggle: false,\r\n  };\r\n\r\n  handleToggle = () => this.setState(state => ({ isToggle: !state.isToggle }));\r\n\r\n  render() {\r\n    const { isToggle } = this.state;\r\n    const { children } = this.props;\r\n    return children({ isToggle, toggle: this.handleToggle });\r\n  }\r\n}\r\nToggable.propTypes = {\r\n  children: PropTypes.func.isRequired,\r\n};\r\nexport default Toggable;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\nModal.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport css from './EndTest.module.css';\r\nimport Button from '../../Shared/Button/Button';\r\nimport BoxShadow from '../../Shared/BoxShadow/BoxShadow';\r\nimport * as selectors from '../../../redux/testPage/testPageSelectors';\r\nimport { finishTest } from '../../../redux/testPage/testPageOperations';\r\n\r\nfunction EndTest({ endTest, continueTest, handleFinishTest, userId }) {\r\n  const testFinish = e => {\r\n    handleFinishTest(userId);\r\n    endTest(e);\r\n  };\r\n  return (\r\n    <div className={css.container}>\r\n      <BoxShadow boxShadow={6} className={css.modal}>\r\n        <p className={css.text}>\r\n          У Вас есть неотвеченные вопросы. Все равно хотите завершить тест?\r\n        </p>\r\n        <div className={css.controls}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            handleClick={testFinish}\r\n            className={css.btn}\r\n            data-redirect=\"/\"\r\n          >\r\n            Да, выйти!\r\n          </Button>\r\n          <Button\r\n            variant=\"simple\"\r\n            handleClick={continueTest}\r\n            className={css.btn}\r\n          >\r\n            Продолжить тест.\r\n          </Button>\r\n        </div>\r\n      </BoxShadow>\r\n    </div>\r\n  );\r\n}\r\nEndTest.propTypes = {\r\n  endTest: PropTypes.func.isRequired,\r\n  continueTest: PropTypes.func.isRequired,\r\n  handleFinishTest: PropTypes.func.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: selectors.getUserId(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  handleFinishTest: finishTest,\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(EndTest);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport css from './TestControl.module.css';\nimport Button from '../Shared/Button/Button';\nimport Toggable from '../../utils/Toggable';\nimport Modal from '../../utils/Modal';\nimport EndTest from '../Modal/EndTest/EndTest';\n\n// finalResult - нужен для того чтобы изменять поведение кнопки, и ее надпись\n// Посмотреть результат\n// Закончить тест\nconst TestControl = ({ title, current, length, finalResult, history }) => {\n  return (\n    <Toggable>\n      {({ isToggle, toggle }) => {\n        const endTest = e => {\n          history.push(e.target.dataset.redirect);\n        };\n        return (\n          <div className={css.headerTest}>\n            <p className={css.title}>[{title}]</p>\n\n            {finalResult ? (\n              <Button\n                variant=\"outlined\"\n                handleClick={endTest}\n                className={css.btn}\n                data-redirect=\"/result\"\n              >\n                Результат\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                handleClick={toggle}\n                className={css.btn}\n              >\n                Закончить тест\n              </Button>\n            )}\n            <p className={css.orderQuestion}>\n              Вопрос {current}/{length}\n            </p>\n            {isToggle && (\n              <Modal>\n                <EndTest endTest={endTest} continueTest={toggle} />\n              </Modal>\n            )}\n          </div>\n        );\n      }}\n    </Toggable>\n  );\n};\nTestControl.propTypes = {\n  title: PropTypes.string.isRequired,\n  current: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  length: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  finalResult: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\nexport default withRouter(TestControl);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './NewTestImage.module.css';\n\nconst NewTestImage = ({ desktopImage, mobileImage }) => (\n  <picture>\n    <source media=\"(min-width: 768px)\" srcSet={desktopImage} />\n    <source media=\"(min-width: 1280px)\" srcSet={desktopImage} />\n    <img className={styles.image} src={mobileImage} alt=\"mobileImage\" />\n  </picture>\n);\nNewTestImage.propTypes = {\n  desktopImage: PropTypes.string.isRequired,\n  mobileImage: PropTypes.string.isRequired,\n};\nexport default NewTestImage;\n","/* eslint no-shadow: 0 */\nimport React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { withToastManager } from 'react-toast-notifications';\nimport PropTypes from 'prop-types';\nimport TestAnswer from '../../components/TestAnswer/TestAnswer';\nimport TestExplanation from '../../components/TestExplanation/TestExplanation';\nimport Header from '../../components/Header/Header';\nimport TestQuestion from '../../components/TestQuestion/TestQuestion';\nimport TestControl from '../../components/TestControl/TestControl';\nimport NewTestImage from '../../components/NewTestImage/NewTestImage';\nimport styles from './TestPage.module.css';\n\nclass TestPage extends Component {\n  state = {\n    userAnswerNumber: null,\n    userId: null,\n    languageTitle: '',\n  };\n\n  componentDidMount() {\n    const { currentQuestion } = this.props;\n    if (currentQuestion) {\n      const { userId, languageTitle } = currentQuestion;\n      this.setState({ userId, languageTitle });\n    }\n  }\n\n  componentDidUpdate() {\n    const { userId, languageTitle } = this.state;\n    if (!userId || !languageTitle) {\n      const { currentQuestion } = this.props;\n      const { userId, languageTitle } = currentQuestion;\n      this.setState({ userId, languageTitle });\n    }\n  }\n\n  scrollTop = () => window.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'warning',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  onChangeUserAnswer = e => {\n    this.setState({ userAnswerNumber: Number(e.target.dataset.number) });\n\n    const userAnswerNumber = Number(e.target.dataset.number);\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n    const questionAnswer = { questionNumber, questionId, userAnswerNumber };\n    this.props.onChangeAnswer(questionAnswer);\n  };\n\n  onClickAnswer = () => {\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n\n    const { userAnswerNumber, userId } = this.state;\n\n    if (userAnswerNumber) {\n      const userAnswer = {\n        questionNumber,\n        questionId,\n        userAnswerNumber,\n      };\n      this.props.fetchResultAnswer(userId, userAnswer);\n      this.setState({ userAnswerNumber: null });\n    } else {\n      this.addNotification('Сперва выбери ответ, а потом жми на кнопку ;)');\n    }\n  };\n\n  onClickNextQuestion = () => {\n    const {\n      rewriteCurrentQuestion,\n      resetFields,\n      history,\n      finalResult,\n    } = this.props;\n\n    if (finalResult) {\n      history.push('/result');\n      this.scrollTop();\n      return;\n    }\n    rewriteCurrentQuestion();\n    resetFields();\n    this.scrollTop();\n  };\n\n  onClickSkipQuestion = () => {\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n    const { userId } = this.state;\n    const questionSkip = { questionNumber, questionId };\n    this.props.fetchSkipTheQuestion(userId, questionSkip);\n    this.props.resetUserAnswer();\n    this.scrollTop();\n  };\n\n  render() {\n    const { currentQuestion, resultAnswered } = this.props;\n    const { languageTitle } = this.state;\n    let desktopImage;\n    let mobileImage;\n    if (currentQuestion && currentQuestion.question.image) {\n      desktopImage = `https://test.goit.co.ua/images/${currentQuestion.question.image}`;\n      mobileImage = `https://test.goit.co.ua/images/${currentQuestion.question.imageMobile}`;\n    }\n    return (\n      <>\n        <Header />\n        {!currentQuestion && (\n          <div className={styles.loader}>\n            <Loader type=\"Puff\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n          </div>\n        )}\n\n        {currentQuestion && (\n          <>\n            <div className={styles.testPageContainer}>\n              <div className={styles.container}>\n                <TestControl\n                  title={languageTitle}\n                  current={currentQuestion.questionNumber}\n                  finalResult={false}\n                  length={currentQuestion.allQuestionsCount}\n                />\n                <TestQuestion\n                  question={currentQuestion.question.questionText}\n                />\n\n                {currentQuestion.question.image && (\n                  <NewTestImage\n                    desktopImage={desktopImage}\n                    mobileImage={mobileImage}\n                  />\n                )}\n                <TestAnswer\n                  questions={currentQuestion.question.answers}\n                  onChangeUserAnswer={this.onChangeUserAnswer}\n                  onClickAnswer={this.onClickAnswer}\n                  onClickSkipQuestion={this.onClickSkipQuestion}\n                  resultAnswer={resultAnswered}\n                />\n                {resultAnswered && (\n                  <TestExplanation\n                    onClickNextQuestion={this.onClickNextQuestion}\n                    description={resultAnswered.questionExplanation}\n                  />\n                )}\n              </div>\n\n              {resultAnswered &&\n                (resultAnswered.explanation &&\n                resultAnswered.explanation.length > 100 ? (\n                  <div className={styles.bigBackground} />\n                ) : (\n                  <div className={styles.background} />\n                ))}\n              {!resultAnswered && <div className={styles.background} />}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nTestPage.propTypes = {\n  fetchResultAnswer: PropTypes.func.isRequired,\n  fetchSkipTheQuestion: PropTypes.func.isRequired,\n  onChangeAnswer: PropTypes.func.isRequired,\n  resetUserAnswer: PropTypes.func.isRequired,\n  rewriteCurrentQuestion: PropTypes.func.isRequired,\n  resetFields: PropTypes.func.isRequired,\n  resultAnswered: PropTypes.oneOfType([\n    PropTypes.shape({\n      rightAnswer: PropTypes.number,\n      userAnswer: PropTypes.number,\n      userAnswerCorrectly: PropTypes.bool,\n      explanation: PropTypes.string,\n    }),\n    PropTypes.bool,\n  ]).isRequired,\n  currentQuestion: PropTypes.shape({\n    questionNumber: PropTypes.number,\n    languageTitle: PropTypes.string,\n    allQuestionsCount: PropTypes.number,\n    question: PropTypes.shape({\n      questionId: PropTypes.string,\n      answers: PropTypes.array,\n      questionText: PropTypes.string,\n      image: PropTypes.string,\n      imageMobile: PropTypes.string,\n    }),\n    userId: PropTypes.string,\n  }),\n  userId: PropTypes.string.isRequired,\n  finalResult: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n};\n\nTestPage.defaultProps = {\n  currentQuestion: null,\n  finalResult: null,\n};\n\nexport default withToastManager(TestPage);\n","import { connect } from 'react-redux';\nimport TestPage from './TestPage';\nimport * as TestPageActions from '../../redux/testPage/testPageActions';\nimport * as TestPageOperations from '../../redux/testPage/testPageOperations';\nimport * as TestPageSelectors from '../../redux/testPage/testPageSelectors';\nimport { store } from '../../redux/store';\n\nconst { dispatch, getState } = store;\n\nconst mapStateToProps = state => ({\n  currentQuestion: TestPageSelectors.getCurrentQuestion(state),\n  resultAnswered: TestPageSelectors.getResultAnswer(state),\n  userId: TestPageSelectors.getUserId(state),\n  finalResult: TestPageSelectors.finalResult(state),\n});\nconst mapDispatchToProps = {\n  fetchResultAnswer: TestPageOperations.fetchResultAnswer,\n  onChangeAnswer: userAnswer =>\n    dispatch(TestPageActions.changeUserAnswer(userAnswer)),\n  rewriteCurrentQuestion: () => () =>\n    dispatch(TestPageActions.rewriteCurrentQuestion(getState().nextQuestion)),\n  resetFields: () => () => {\n    dispatch(TestPageActions.resetResultAnswer());\n    dispatch(TestPageActions.resetUserAnswer());\n    dispatch(TestPageActions.resetNextQuestion());\n  },\n  resetUserAnswer: () => dispatch(TestPageActions.resetUserAnswer()),\n  fetchSkipTheQuestion: TestPageOperations.fetchSkipTheQuestion,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TestPage);\n","import React from 'react';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './ResultDiagram.module.css';\n\nconst ResultDiagramm = ({\n  allQuestionsCount,\n  rightAnswered,\n  languageTitle,\n  totalTime,\n  rightAnsweredInPercentage,\n}) => {\n  const wishes = percentage => {\n    if (percentage <= 25) return 'Рандом прошел бы этот тест лучше(((';\n    if (percentage > 25 && percentage <= 50)\n      return 'Ну такое... Закрывай, пока никто не увидел';\n    if (percentage > 50 && percentage <= 75)\n      return 'Ты на правильном пути! Не останавливайся';\n    if (percentage > 75 && percentage <= 99)\n      return 'Красавчик! Но можно лучше)))';\n    return \"Идеально! You're the BEST!\";\n  };\n  return (\n    <div className={style.container}>\n      <h2 className={style.head}>\n        Результаты теста &ldquo;{languageTitle}&rdquo;\n      </h2>\n      <div className={style.diagramm}>\n        <ReactMinimalPieChart\n          data={[\n            {\n              title: 'Correct',\n              value: rightAnsweredInPercentage,\n              color: '#ff6c00',\n            },\n            {\n              title: 'Incorrect',\n              value: 100 - rightAnsweredInPercentage,\n              color: '#8b92ab',\n            },\n          ]}\n          lineWidth={15}\n        />\n        <span className={style.digrammPercentage}>\n          {Math.round(rightAnsweredInPercentage)}%\n        </span>\n      </div>\n      <p className={style.wishes}>{wishes(rightAnsweredInPercentage)}</p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Правильных ответов{' '}\n        <span className={style.innerNumber}>{rightAnswered}</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Всего вопросов{' '}\n        <span className={style.innerNumber}>{allQuestionsCount}</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Время{' '}\n        <span className={style.innerNumber}>{totalTime} мин</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <Link className={style.link} to=\"/\">\n        Пройти еще раз\n      </Link>\n    </div>\n  );\n};\n\nResultDiagramm.defaultProps = {\n  allQuestionsCount: 25,\n  rightAnswered: 0,\n  languageTitle: 'Java',\n  rightAnsweredInPercentage: 0,\n};\n\nResultDiagramm.propTypes = {\n  allQuestionsCount: PropTypes.number,\n  rightAnswered: PropTypes.number,\n  languageTitle: PropTypes.string,\n  totalTime: PropTypes.string.isRequired,\n  rightAnsweredInPercentage: PropTypes.number,\n};\n\nexport default ResultDiagramm;\n","export const getQuestions = state => state.finalResult.questions;\nexport const getLanguageTitle = state => state.finalResult.languageTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as allTestContainerSelectors from '../../redux/allTestContainer/allTestContainerSelectors';\nimport TestQuestion from '../TestQuestion/TestQuestion';\nimport TestAnswer from '../TestAnswer/TestAnswer';\nimport TestExplanation from '../TestExplanation/TestExplanation';\nimport styles from './AllTestContainer.module.css';\nimport NewTestImage from '../NewTestImage/NewTestImage';\n\nconst AllTestContainer = ({ questions }) =>\n  questions.map((item, i) => (\n    <div className={styles.item} key={item.questionId}>\n      <TestQuestion question={item.questionText} />\n      {item.image && (\n        <NewTestImage\n          desktopImage={`https://test.goit.co.ua/images/${item.image}`}\n          mobileImage={`https://test.goit.co.ua/images/${item.imageMobile}`}\n        />\n      )}\n      <TestAnswer\n        questions={item.answers}\n        resultAnswer={{\n          answerCorrectly: item.userAnswerCorrectly,\n          rightAnswer: item.rightAnswer,\n          userAnswer: item.userAnswer,\n        }}\n      />\n      <TestExplanation\n        description={item.explanation || ''}\n        onClickNextQuestion={null}\n      />\n      {!(questions.length - 1 === i) && <span className={styles.span} />}\n    </div>\n  ));\nAllTestContainer.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  languageTitle: PropTypes.string.isRequired,\n  code: PropTypes.string,\n  explanation: PropTypes.string,\n};\nAllTestContainer.defaultProps = {\n  code: '',\n  explanation: '',\n};\nconst mapStateToProps = state => ({\n  questions: allTestContainerSelectors.getQuestions(state),\n  languageTitle: allTestContainerSelectors.getLanguageTitle(state),\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(AllTestContainer);\n","export const getAllQuestionsCount = state =>\n  state.finalResult.allQuestionsCount;\nexport const getLanguageTitle = state => state.finalResult.languageTitle;\nexport const getUserRightAnswered = state =>\n  state.finalResult.userRightAnswered;\nexport const getUserRightAnsweredInPercentage = state =>\n  state.finalResult.userRightAnsweredInPercentage;\nexport const getFinalRsult = state => state.finalResult;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../../components/Header/Header';\nimport * as actions from '../../redux/languageDescrPage/languageDescrPageActionCreators';\nimport * as selectors from '../../redux/languageDescrPage/languageDescrPageSelectors';\nimport ResultDiagramm from '../../components/ResultDiagram/ResultDiagram';\nimport css from './ResultPage.module.css';\nimport AllTestContainer from '../../components/AllTestContainer/AllTestContainer';\nimport * as selector from '../../redux/fakeReducer';\n\nclass ResultPage extends Component {\n  componentDidMount() {\n    const { setEndTime, endTime } = this.props;\n    if (!endTime) setEndTime();\n  }\n\n  getMinutes() {\n    const { startTime, endTime } = this.props;\n    const delta = endTime - startTime;\n    const day = moment(new Date(delta));\n    return day.format('m');\n  }\n\n  render() {\n    const {\n      endTime,\n      allQuestionsCount,\n      languageTitle,\n      rightAnswered,\n      rightAnsweredInPercentage,\n      finalResult,\n    } = this.props;\n    if (!finalResult) return <Redirect to=\"/\" />;\n    if (!endTime) return null;\n    return (\n      <>\n        <div className={css.container}>\n          <Header />\n          <ResultDiagramm\n            allQuestionsCount={allQuestionsCount}\n            languageTitle={languageTitle}\n            rightAnswered={rightAnswered}\n            rightAnsweredInPercentage={rightAnsweredInPercentage}\n            totalTime={this.getMinutes()}\n          />\n          <AllTestContainer />\n        </div>\n        <div className={css.relative}>\n          <div className={css.background} />\n        </div>\n      </>\n    );\n  }\n}\n\nResultPage.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number,\n  setEndTime: PropTypes.func.isRequired,\n  allQuestionsCount: PropTypes.number.isRequired,\n  languageTitle: PropTypes.string.isRequired,\n  rightAnswered: PropTypes.number.isRequired,\n  rightAnsweredInPercentage: PropTypes.number.isRequired,\n  finalResult: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nResultPage.defaultProps = {\n  endTime: null,\n  finalResult: false,\n};\nconst mapDispatchToProps = {\n  setEndTime: actions.endTime,\n};\nconst mapStateToProps = state => ({\n  startTime: selectors.startTime(state),\n  endTime: selectors.endTime(state),\n  allQuestionsCount: selector.getAllQuestionsCount(state),\n  languageTitle: selector.getLanguageTitle(state),\n  rightAnswered: selector.getUserRightAnswered(state),\n  rightAnsweredInPercentage: selector.getUserRightAnsweredInPercentage(state),\n  finalResult: selector.getFinalRsult(state),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ResultPage);\n","import React from 'react';\nimport styles from './ContactInfo.module.css';\n\nconst ContactInfo = () => (\n  <div className={styles.container}>\n    <h2 className={styles.title}>Обратная связь</h2>\n    <p className={styles.description}>\n      Предложения, вопросы и свои тесты направляйте на любой из указанных\n      контактов:\n    </p>\n    <p className={styles.email}>\n      <span className={styles.textEmailFirst}>[ E-mail </span>\n      <span className={styles.textEmail}>goittests@gmail.com</span> ]\n    </p>\n    <p className={styles.project}>\n      [ <span className={styles.textProject}>@GoITTests</span> ]\n    </p>\n  </div>\n);\n\nexport default ContactInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport photoDivakov from '../../assets/img/teamPhoto/photoDivakov.jpg';\nimport photoKobec from '../../assets/img/teamPhoto/photoKobec.jpg';\nimport photoPotapov from '../../assets/img/teamPhoto/photoPotapov.jpg';\nimport photoMarukhin from '../../assets/img/teamPhoto/photoMarukhin.jpg';\nimport photoLapeev from '../../assets/img/teamPhoto/photoLapeev.jpg';\nimport photoVereketa from '../../assets/img/teamPhoto/photoVereketa.jpg';\nimport photoKalinbet from '../../assets/img/teamPhoto/photoKalinbet.jpg';\n\nconst PHOTOS = {\n  photoDivakov,\n  photoKobec,\n  photoPotapov,\n  photoMarukhin,\n  photoLapeev,\n  photoVereketa,\n  photoKalinbet,\n};\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.list}>\n    {contacts.map(contact => (\n      <li key={contact.email} className={styles.item}>\n        <img\n          className={styles.img}\n          src={PHOTOS[contact.photo]}\n          alt=\"developer\"\n        />\n        <p className={styles.name}>{contact.name}</p>\n        <p className={styles.position}>{contact.position}</p>\n        <p className={styles.email}>\n          email: <span className={styles.textEmail}>{contact.email}</span>\n        </p>\n        <p className={styles.description}>{contact.description}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport contacts from '../../assets/bd/contacts.json';\nimport ContactInfo from '../../components/ContactInfo/ContactInfo';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Header from '../../components/Header/Header';\n\nconst ContactPage = () => {\n  return (\n    <div>\n      <Header />\n      <ContactInfo />\n      <ContactList contacts={contacts} />\n    </div>\n  );\n};\n\nexport default ContactPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport StartPage from './pages/StartPage/StartPage';\nimport LanguageDescrPage from './pages/LanguageDescrPage/LanguageDescrPage';\nimport TestPage from './pages/TestPage/TestPageContainer';\nimport ResultPage from './pages/ResultPage/ResultPage';\nimport ContactPage from './pages/ContactPage/ContactPage';\n// import css from './App.module.css';\n\nfunction App() {\n  return (\n    <ToastProvider placement=\"bottom-right\">\n      <>\n        <Router>\n          <Route exact path=\"/\" component={StartPage} />\n          <Route exact path=\"/language_descr\" component={LanguageDescrPage} />\n          <Route exact path=\"/test\" component={TestPage} />\n          <Route exact path=\"/result\" component={ResultPage} />\n          <Route exact path=\"/contacts\" component={ContactPage} />\n        </Router>\n      </>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        /* eslint no-use-before-define:0 */\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      /* eslint no-param-reassign:0 */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultDiagram_container__ErnqX\",\"head\":\"ResultDiagram_head__3YES1\",\"diagramm\":\"ResultDiagram_diagramm__Hkdz-\",\"digrammPercentage\":\"ResultDiagram_digrammPercentage__1ViOU\",\"wishes\":\"ResultDiagram_wishes__2hByG\",\"statistics\":\"ResultDiagram_statistics__2OyYc\",\"bracket\":\"ResultDiagram_bracket__1dYkJ\",\"innerNumber\":\"ResultDiagram_innerNumber__3eAVD\",\"link\":\"ResultDiagram_link__2CMXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"StartPage_section__1Pp4u\",\"sectionAbout\":\"StartPage_sectionAbout__1r37h\",\"blockquote\":\"StartPage_blockquote__2O_P5\",\"lduo\":\"StartPage_lduo__DBXGL\",\"autor\":\"StartPage_autor__3n0BC\",\"organization\":\"StartPage_organization__348eu\",\"langList\":\"StartPage_langList__1iZsy\",\"loader\":\"StartPage_loader__QDzwe\",\"error\":\"StartPage_error__1XiPD\",\"sectionText\":\"StartPage_sectionText__3gTth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"LanguageCard_card__187IK\",\"link\":\"LanguageCard_link__3NPia\",\"shadow\":\"LanguageCard_shadow__2dNHc\",\"logo\":\"LanguageCard_logo__2YxeD\",\"lang\":\"LanguageCard_lang__2sdWi\",\"questions\":\"LanguageCard_questions__3oj36\",\"emptyImg\":\"LanguageCard_emptyImg__2iXEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactInfo_container__1_-Fl\",\"title\":\"ContactInfo_title__VMdON\",\"description\":\"ContactInfo_description__nH9Kz\",\"email\":\"ContactInfo_email__P7X1n\",\"project\":\"ContactInfo_project__3EDhZ\",\"textEmailFirst\":\"ContactInfo_textEmailFirst__2RZe-\",\"textEmail\":\"ContactInfo_textEmail__2Gf1p\",\"textProject\":\"ContactInfo_textProject__g1TTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1nyA2\",\"item\":\"ContactList_item__EBsZa\",\"img\":\"ContactList_img__2E9vO\",\"name\":\"ContactList_name__la2Fa\",\"position\":\"ContactList_position__1JeQL\",\"email\":\"ContactList_email__13NC4\",\"textEmail\":\"ContactList_textEmail__3ma5I\",\"description\":\"ContactList_description__npu3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EndTest_container__527QB\",\"modal\":\"EndTest_modal__3lTNk\",\"text\":\"EndTest_text__1XeBj\",\"controls\":\"EndTest_controls__2vx1P\",\"btn\":\"EndTest_btn__3iocC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestPage_container__pjBNG\",\"loader\":\"TestPage_loader__2pv90\",\"testPageContainer\":\"TestPage_testPageContainer__dPoW1\",\"background\":\"TestPage_background__qMYpo\",\"bigBackground\":\"TestPage_bigBackground__3qiwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestExplanation_container__3Glp2\",\"title\":\"TestExplanation_title__Owsmw\",\"text\":\"TestExplanation_text__3VRWC\",\"button\":\"TestExplanation_button__jaUT6\",\"innerContainer\":\"TestExplanation_innerContainer__XtA99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTest\":\"TestControl_headerTest__1Sw3O\",\"title\":\"TestControl_title__3TmCR\",\"orderQuestion\":\"TestControl_orderQuestion__1x3KG\",\"btn\":\"TestControl_btn__3i_w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2sKsB\",\"a\":\"Header_a__1DUzX\",\"logo\":\"Header_logo__1wPOy\",\"link\":\"Header_link__2H-Tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstBlock\":\"StatisticBlock_firstBlock__3X03f\",\"firstBlockImage\":\"StatisticBlock_firstBlockImage__28WMF\",\"firstBlockTextInfo\":\"StatisticBlock_firstBlockTextInfo__2Od5g\",\"btnGoBack\":\"StatisticBlock_btnGoBack__3Pqnh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondBlock\":\"InformationBlock_secondBlock__cu6f7\",\"secondBlockTitle\":\"InformationBlock_secondBlockTitle__Bk-YV\",\"secondBlockDescription\":\"InformationBlock_secondBlockDescription__3kBvz\",\"btnStartTest\":\"InformationBlock_btnStartTest__zGC5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestAnswer_container__1rDYN\",\"label\":\"TestAnswer_label__cSrgM\",\"labelCorrect\":\"TestAnswer_labelCorrect__JDpjO\",\"labelIncorrect\":\"TestAnswer_labelIncorrect__h3Fws\",\"img\":\"TestAnswer_img__3q9nF\",\"inputWrapper\":\"TestAnswer_inputWrapper__H0LBH\",\"input\":\"TestAnswer_input__2KCTD\",\"mobileContainerButton\":\"TestAnswer_mobileContainerButton__14g3B\",\"buttonContainer\":\"TestAnswer_buttonContainer__odTUh\",\"tabletContainerButton\":\"TestAnswer_tabletContainerButton__18nJV\",\"button\":\"TestAnswer_button__biIH1\",\"buttonConfirm\":\"TestAnswer_buttonConfirm__2PFf5 TestAnswer_button__biIH1\",\"buttonSkip\":\"TestAnswer_buttonSkip__2YNlt TestAnswer_button__biIH1\",\"wrapperImgInput\":\"TestAnswer_wrapperImgInput__2fvSk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative\":\"ResultPage_relative__SW59s\",\"container\":\"ResultPage_container__2RQ6V\",\"background\":\"ResultPage_background__2oCHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"languageDescrPageContainer\":\"LanguageDescrPage_languageDescrPageContainer__2c1P2\",\"loader\":\"LanguageDescrPage_loader__1mkX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBlock_item\":\"TextBlockItem_textBlock_item__RRgOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"TestQuestion_paper__G4u72\",\"text\":\"TestQuestion_text__2UU0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AllTestContainer_item__7r2ed\",\"span\":\"AllTestContainer_span__3cW6S\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ed24fc69.svg\";","module.exports = __webpack_public_path__ + \"static/media/happyCat1.3aab5c4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/happyCat2.ec2e6309.png\";","module.exports = __webpack_public_path__ + \"static/media/happyCat3.34d25416.png\";","module.exports = __webpack_public_path__ + \"static/media/pensiveСat1.37e1338f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pensiveCat2.0560620b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shadowDepth1\":\"BoxShadow_shadowDepth1__1WYDG\",\"shadowDepth2\":\"BoxShadow_shadowDepth2__2exNK\",\"shadowDepth3\":\"BoxShadow_shadowDepth3__1YLT7\",\"shadowDepth4\":\"BoxShadow_shadowDepth4__1s6AM\",\"shadowDepth5\":\"BoxShadow_shadowDepth5__280Ks\",\"shadowDepth6\":\"BoxShadow_shadowDepth6__2pyi4\",\"shadowDepth7\":\"BoxShadow_shadowDepth7__2_gUe\",\"shadowDepth8\":\"BoxShadow_shadowDepth8__3o2Gd\",\"shadowDepth9\":\"BoxShadow_shadowDepth9__3WIa-\",\"shadowDepth10\":\"BoxShadow_shadowDepth10__11hRh\",\"shadowDepth11\":\"BoxShadow_shadowDepth11__2ZBRy\",\"shadowDepth12\":\"BoxShadow_shadowDepth12__37RVb\",\"shadowDepth13\":\"BoxShadow_shadowDepth13__2E7Gu\",\"shadowDepth14\":\"BoxShadow_shadowDepth14__PQNwF\",\"shadowDepth15\":\"BoxShadow_shadowDepth15__25oSi\",\"shadowDepth16\":\"BoxShadow_shadowDepth16__3ht2G\",\"shadowDepth17\":\"BoxShadow_shadowDepth17__21K_A\",\"shadowDepth18\":\"BoxShadow_shadowDepth18__1RnPQ\",\"shadowDepth19\":\"BoxShadow_shadowDepth19__2Bqbl\",\"shadowDepth20\":\"BoxShadow_shadowDepth20__22kyA\",\"shadowDepth21\":\"BoxShadow_shadowDepth21__15bx8\",\"shadowDepth22\":\"BoxShadow_shadowDepth22__3-Nhb\",\"shadowDepth23\":\"BoxShadow_shadowDepth23__2BI_O\",\"shadowDepth24\":\"BoxShadow_shadowDepth24__2ofHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simple\":\"Button_simple__KokLg\",\"contained\":\"Button_contained__3ZAS- Button_simple__KokLg\",\"outlined\":\"Button_outlined__3wXmp Button_simple__KokLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"NewTestImage_image__2KLUy\"};","module.exports = __webpack_public_path__ + \"static/media/photoDivakov.3d667b01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoKobec.daf4b42b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoPotapov.81512866.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoMarukhin.762b4cf1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoLapeev.f9545272.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoVereketa.ccb90b4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photoKalinbet.e41b85d9.jpg\";"],"sourceRoot":""}